name: Build nezha-agent binary

on:
  workflow_run:
    workflows: ["Run Tests"]
    branches: [main]
    types:
      - completed
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'nezhahq/agent'
          fetch-depth: '1'

      - uses: actions/setup-go@v4
        with:
          go-version: 'stable'

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Echo env
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - name: Build
        timeout-minutes: 180
        run: |
          pwd
          go version
          VERSION="${{ env.RELEASE_VERSION }}"
          VERSION="${VERSION%.*}"  
          echo "VERSION=${VERSION}"
          set -x
          DATE=$(date -u '+%Y-%m-%d-%H%M UTC')
          VERSION_FLAGS="-X \"main.Version=${VERSION}\" -X \"main.BuildTime=${DATE}\""
          NAME="nezha-agent"
          SRC="."
          rm -rf ./release
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build                     -mod=mod -ldflags="${VERSION_FLAGS} -w -s" -o release/${NAME}-linux-amd64 ${SRC}
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build                     -mod=mod -ldflags="${VERSION_FLAGS} -w -s" -o release/${NAME}-linux-arm64 ${SRC}
          mkdir -p musldist
          mv release/* musldist/
      - name: Compress with UPX
        run: |
          latest_url=$(wget -qO- https://github.com/upx/upx/releases/latest | grep -oP 'https://github.com/upx/upx/releases/download/v[\d.]+/upx-[\d.]+-amd64_linux\.tar\.xz')
          echo $latest_url
          wget $latest_url
          tar -Jxf upx*.tar.xz
          sudo cp upx*/upx /usr/bin
          upx -9 musldist/*
      - name: Upload dist
        uses: actions/upload-artifact@main
        with:
          name: nezha-agent
          path: |
              musldist
      - name: Generate release tag
        id: tag
        run: echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"

      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: |
              musldist/*
      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.1.0
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_KEY }}
          
      - name: clean workflow runs
        uses: boredland/action-purge-workflow-runs@main
        with:
          days-old: 2
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_KEY }}
