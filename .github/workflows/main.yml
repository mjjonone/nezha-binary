name: Build nezha-agent binary

on:
  workflow_run:
    workflows: ["Run Tests"]
    branches: [main]
    types:
      - completed
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true

env:
  RELEASE_VERSION: ${{ github.event.inputs.version }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'nezhahq/agent'
          fetch-depth: '1'

      - uses: actions/setup-go@v4
        with:
          go-version: 'stable'

      - name: Build
        timeout-minutes: 180
        run: |
          VERSION="${RELEASE_VERSION}"
          DATE=$(date -u '+%Y-%m-%d-%H%M UTC')
          VERSION_FLAGS="-X 'main.Version=${VERSION}' -X 'main.BuildTime=${DATE}'"
          NAME="nezha-agent"
          SRC="./cmd/agent"
          mkdir -p release
          for ARCH in amd64 arm64; do
            CGO_ENABLED=0 GOOS=linux GOARCH=$ARCH go build -mod=mod -ldflags="${VERSION_FLAGS} -w -s" -o release/${NAME}-linux-${ARCH} ${SRC}
          done

      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_KEY }}
        with:
          tag_name: ${{ github.run_number }}
          files: release/*

  remove_old_releases:
    runs-on: ubuntu-latest
    steps:
      - name: Remove old releases and tags
        run: |
          release_ids=$(gh release list --repo mjjonone/nezha-agent-binary --limit 100 | jq -r '.[].id' | tail -n +98)
          for release_id in $release_ids; do
            gh release delete --repo mjjonone/nezha-agent-binary $release_id --yes
          done
          tag_names=$(gh api repos/mjjonone/nezha-agent-binary/git/refs/tags --jq '.[].ref' | sed 's/refs\/tags\///' | tail -n +3)
          for tag in $tag_names; do
            gh api --method DELETE /repos/mjjonone/nezha-agent-binary/git/refs/tags/$tag
          done
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_KEY }}
      
  clean_workflow_runs:
    runs-on: ubuntu-latest
    steps:
      - name: Clean workflow runs
        run: |
          run_ids=$(gh api -X GET /repos/mjjonone/nezha-agent-binary/actions/runs | jq -r '.workflow_runs | sort_by(.run_number) | reverse | .[2:] | .[].id')
          for run_id in $run_ids; do
            gh api -X DELETE /repos/mjjonone/nezha-agent-binary/actions/runs/$run_id
          done
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_KEY }}
